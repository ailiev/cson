-- -*- haskell -*-
--
-- Simple library to parse and access a JSON-like mini-language for representing
-- structures.
--
-- Copyright (C) 2003-2007, Alexander Iliev <sasho@cs.dartmouth.edu> and
-- Sean W. Smith <sws@cs.dartmouth.edu>
--
-- All rights reserved.
--
-- This code is released under a BSD license.
-- Please see LICENSE.txt for the full license and disclaimers.
--

-- JSON-like grammar, but somewhat easier to look at.
-- see the example files for an idea of what it looks like.

comment "/*" "*/" ;
comment "//" ;

TopLevel.       TopLevelT   ::= [ObjectT] ;
separator ObjectT "" ;

Object.         ObjectT     ::= "{" [AssocT] "}" ;

separator AssocT "," ;

Assoc.           AssocT       ::= Ident "=" Value ;

SListVal.       Value       ::= SListT ;
ObjectVal.      Value       ::= ObjectT ;
NumVal.         Value       ::= Number ;
StringVal.      Value       ::= String ;
LitVal.         Value       ::= Literal ;

-- FIXME: this does not actually allow negative numbers! Need to specify that explicitly
-- here.
NumInt.         Number     ::= Integer ;
NumFloat.       Number     ::= Double ;

SList.          SListT      ::= "[" [Value] "]" ;

separator Value "," ;

LitTrue.        Literal     ::= "true" ;
LitFalse.       Literal     ::= "false" ;
LitNull.        Literal     ::= "null" ;


entrypoints TopLevelT ;
