-- -*- haskell -*-

-- JSON-like grammar, but somewhat easier to look at.
-- see http://www.json.org/

Object.         ObjectT     ::= "{" [AssocT] "}" ;

separator AssocT "," ;

Assoc.           AssocT       ::= Ident "=" Value ;

SListVal.       Value       ::= SListT ;
ObjectVal.      Value       ::= ObjectT ;
NumVal.         Value       ::= Number ;
StringVal.      Value       ::= String ;
LitVal.         Value       ::= Literal ;

NumInt.         Number     ::= Integer ;
NumFloat.       Number     ::= Double ;

SList.          SListT      ::= "[" [Value] "]" ;

separator Value "," ;

LitTrue.        Literal     ::= "true" ;
LitFalse.       Literal     ::= "false" ;
LitNull.        Literal     ::= "null" ;

entrypoints ObjectT;
